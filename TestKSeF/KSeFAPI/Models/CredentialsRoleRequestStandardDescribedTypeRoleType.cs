// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace KSeFAPI.Models
{
    /// <summary> The CredentialsRoleRequestStandardDescribedTypeRoleType. </summary>
    public readonly partial struct CredentialsRoleRequestStandardDescribedTypeRoleType : IEquatable<CredentialsRoleRequestStandardDescribedTypeRoleType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="CredentialsRoleRequestStandardDescribedTypeRoleType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public CredentialsRoleRequestStandardDescribedTypeRoleType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string IntrospectionValue = "introspection";
        private const string InvoiceReadValue = "invoice_read";
        private const string InvoiceWriteValue = "invoice_write";
        private const string PaymentConfirmationWriteValue = "payment_confirmation_write";
        private const string CredentialsReadValue = "credentials_read";
        private const string CredentialsManageValue = "credentials_manage";
        private const string SelfInvoicingValue = "self_invoicing";
        private const string TaxRepresentativeValue = "tax_representative";
        private const string EnforcementOperationsValue = "enforcement_operations";

        /// <summary> introspection. </summary>
        public static CredentialsRoleRequestStandardDescribedTypeRoleType Introspection { get; } = new CredentialsRoleRequestStandardDescribedTypeRoleType(IntrospectionValue);
        /// <summary> invoice_read. </summary>
        public static CredentialsRoleRequestStandardDescribedTypeRoleType InvoiceRead { get; } = new CredentialsRoleRequestStandardDescribedTypeRoleType(InvoiceReadValue);
        /// <summary> invoice_write. </summary>
        public static CredentialsRoleRequestStandardDescribedTypeRoleType InvoiceWrite { get; } = new CredentialsRoleRequestStandardDescribedTypeRoleType(InvoiceWriteValue);
        /// <summary> payment_confirmation_write. </summary>
        public static CredentialsRoleRequestStandardDescribedTypeRoleType PaymentConfirmationWrite { get; } = new CredentialsRoleRequestStandardDescribedTypeRoleType(PaymentConfirmationWriteValue);
        /// <summary> credentials_read. </summary>
        public static CredentialsRoleRequestStandardDescribedTypeRoleType CredentialsRead { get; } = new CredentialsRoleRequestStandardDescribedTypeRoleType(CredentialsReadValue);
        /// <summary> credentials_manage. </summary>
        public static CredentialsRoleRequestStandardDescribedTypeRoleType CredentialsManage { get; } = new CredentialsRoleRequestStandardDescribedTypeRoleType(CredentialsManageValue);
        /// <summary> self_invoicing. </summary>
        public static CredentialsRoleRequestStandardDescribedTypeRoleType SelfInvoicing { get; } = new CredentialsRoleRequestStandardDescribedTypeRoleType(SelfInvoicingValue);
        /// <summary> tax_representative. </summary>
        public static CredentialsRoleRequestStandardDescribedTypeRoleType TaxRepresentative { get; } = new CredentialsRoleRequestStandardDescribedTypeRoleType(TaxRepresentativeValue);
        /// <summary> enforcement_operations. </summary>
        public static CredentialsRoleRequestStandardDescribedTypeRoleType EnforcementOperations { get; } = new CredentialsRoleRequestStandardDescribedTypeRoleType(EnforcementOperationsValue);
        /// <summary> Determines if two <see cref="CredentialsRoleRequestStandardDescribedTypeRoleType"/> values are the same. </summary>
        public static bool operator ==(CredentialsRoleRequestStandardDescribedTypeRoleType left, CredentialsRoleRequestStandardDescribedTypeRoleType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="CredentialsRoleRequestStandardDescribedTypeRoleType"/> values are not the same. </summary>
        public static bool operator !=(CredentialsRoleRequestStandardDescribedTypeRoleType left, CredentialsRoleRequestStandardDescribedTypeRoleType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="CredentialsRoleRequestStandardDescribedTypeRoleType"/>. </summary>
        public static implicit operator CredentialsRoleRequestStandardDescribedTypeRoleType(string value) => new CredentialsRoleRequestStandardDescribedTypeRoleType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is CredentialsRoleRequestStandardDescribedTypeRoleType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(CredentialsRoleRequestStandardDescribedTypeRoleType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
