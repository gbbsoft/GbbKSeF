// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace KSeFAPI.Models
{
    public partial class QueryInvoiceAsyncStatusResponse
    {
        internal static QueryInvoiceAsyncStatusResponse DeserializeQueryInvoiceAsyncStatusResponse(JsonElement element)
        {
            DateTimeOffset timestamp = default;
            string referenceNumber = default;
            int processingCode = default;
            string processingDescription = default;
            string elementReferenceNumber = default;
            int numberOfParts = default;
            long numberOfElements = default;
            QueryInvoiceAsyncStatusResponseDivisionType divisionType = default;
            IReadOnlyList<InvoiceDivisionPlainPartType> partList = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("timestamp"))
                {
                    timestamp = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("referenceNumber"))
                {
                    referenceNumber = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("processingCode"))
                {
                    processingCode = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("processingDescription"))
                {
                    processingDescription = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("elementReferenceNumber"))
                {
                    elementReferenceNumber = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("numberOfParts"))
                {
                    // ================================
                    if (property.Value.ValueKind != JsonValueKind.Null)
                    // ================================
                        numberOfParts = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("numberOfElements"))
                {
                    // ================================
                    if (property.Value.ValueKind != JsonValueKind.Null)
                        // ================================
                        numberOfElements = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("divisionType"))
                {
                    // ================================
                    if (property.Value.ValueKind != JsonValueKind.Null)
                        // ================================
                        divisionType = new QueryInvoiceAsyncStatusResponseDivisionType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("partList"))
                {
                    // ================================
                    if (property.Value.ValueKind != JsonValueKind.Null)
                    // ================================
                    {
                        List<InvoiceDivisionPlainPartType> array = new List<InvoiceDivisionPlainPartType>();
                        foreach (var item in property.Value.EnumerateArray())
                        {
                            array.Add(InvoiceDivisionPlainPartType.DeserializeInvoiceDivisionPlainPartType(item));
                        }
                        partList = array;
                    }
                    continue;
                }
            }
            return new QueryInvoiceAsyncStatusResponse(timestamp, referenceNumber, processingCode, processingDescription, elementReferenceNumber, numberOfParts, numberOfElements, divisionType, partList);
        }
    }
}
