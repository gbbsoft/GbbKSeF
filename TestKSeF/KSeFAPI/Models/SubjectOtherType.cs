// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace KSeFAPI.Models
{
    /// <summary> The SubjectOtherType. </summary>
    public partial class SubjectOtherType
    {
        /// <summary> Initializes a new instance of SubjectOtherType. </summary>
        /// <param name="issuedToIdentifier"></param>
        /// <param name="subjectOtherTypeValue"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="issuedToIdentifier"/> is null. </exception>
        internal SubjectOtherType(SubjectIdentifierToType issuedToIdentifier, SubjectOtherTypeSubjectOtherType subjectOtherTypeValue)
        {
            if (issuedToIdentifier == null)
            {
                throw new ArgumentNullException(nameof(issuedToIdentifier));
            }

            IssuedToIdentifier = issuedToIdentifier;
            SubjectOtherTypeValue = subjectOtherTypeValue;
        }

        /// <summary> Initializes a new instance of SubjectOtherType. </summary>
        /// <param name="issuedToIdentifier"></param>
        /// <param name="issuedToName"></param>
        /// <param name="subjectOtherTypeValue"></param>
        internal SubjectOtherType(SubjectIdentifierToType issuedToIdentifier, SubjectNameType issuedToName, SubjectOtherTypeSubjectOtherType subjectOtherTypeValue)
        {
            IssuedToIdentifier = issuedToIdentifier;
            IssuedToName = issuedToName;
            SubjectOtherTypeValue = subjectOtherTypeValue;
        }

        /// <summary> Gets the issued to identifier. </summary>
        public SubjectIdentifierToType IssuedToIdentifier { get; }
        /// <summary> Gets the issued to name. </summary>
        public SubjectNameType IssuedToName { get; }
        /// <summary> Gets the subject other type value. </summary>
        public SubjectOtherTypeSubjectOtherType SubjectOtherTypeValue { get; }
    }
}
