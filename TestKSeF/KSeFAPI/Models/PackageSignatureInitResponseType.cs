// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace KSeFAPI.Models
{
    /// <summary> The PackageSignatureInitResponseType. </summary>
    public partial class PackageSignatureInitResponseType
    {
        /// <summary> Initializes a new instance of PackageSignatureInitResponseType. </summary>
        /// <param name="packageName"></param>
        /// <param name="packagePartSignatureList"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="packageName"/> or <paramref name="packagePartSignatureList"/> is null. </exception>
        internal PackageSignatureInitResponseType(string packageName, IEnumerable<PackagePartSignatureInitResponseType> packagePartSignatureList)
        {
            if (packageName == null)
            {
                throw new ArgumentNullException(nameof(packageName));
            }
            if (packagePartSignatureList == null)
            {
                throw new ArgumentNullException(nameof(packagePartSignatureList));
            }

            PackageName = packageName;
            PackagePartSignatureList = packagePartSignatureList.ToList();
        }

        /// <summary> Initializes a new instance of PackageSignatureInitResponseType. </summary>
        /// <param name="packageName"></param>
        /// <param name="packagePartSignatureList"></param>
        internal PackageSignatureInitResponseType(string packageName, IReadOnlyList<PackagePartSignatureInitResponseType> packagePartSignatureList)
        {
            PackageName = packageName;
            PackagePartSignatureList = packagePartSignatureList;
        }

        /// <summary> Gets the package name. </summary>
        public string PackageName { get; }
        /// <summary> Gets the package part signature list. </summary>
        public IReadOnlyList<PackagePartSignatureInitResponseType> PackagePartSignatureList { get; }
    }
}
