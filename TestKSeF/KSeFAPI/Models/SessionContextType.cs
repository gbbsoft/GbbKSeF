// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace KSeFAPI.Models
{
    /// <summary> The SessionContextType. </summary>
    public partial class SessionContextType
    {
        /// <summary> Initializes a new instance of SessionContextType. </summary>
        /// <param name="contextIdentifier"></param>
        /// <param name="credentialsRoleList"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="contextIdentifier"/> or <paramref name="credentialsRoleList"/> is null. </exception>
        internal SessionContextType(SubjectIdentifierByType contextIdentifier, IEnumerable<CredentialsRoleResponseBaseTypeObject> credentialsRoleList)
        {
            if (contextIdentifier == null)
            {
                throw new ArgumentNullException(nameof(contextIdentifier));
            }
            if (credentialsRoleList == null)
            {
                throw new ArgumentNullException(nameof(credentialsRoleList));
            }

            ContextIdentifier = contextIdentifier;
            CredentialsRoleList = credentialsRoleList.ToList();
        }

        /// <summary> Initializes a new instance of SessionContextType. </summary>
        /// <param name="contextIdentifier"></param>
        /// <param name="contextName"></param>
        /// <param name="credentialsRoleList"></param>
        internal SessionContextType(SubjectIdentifierByType contextIdentifier, SubjectNameType contextName, IReadOnlyList<CredentialsRoleResponseBaseTypeObject> credentialsRoleList)
        {
            ContextIdentifier = contextIdentifier;
            ContextName = contextName;
            CredentialsRoleList = credentialsRoleList;
        }

        /// <summary> Gets the context identifier. </summary>
        public SubjectIdentifierByType ContextIdentifier { get; }
        /// <summary> Gets the context name. </summary>
        public SubjectNameType ContextName { get; }
        /// <summary> Gets the credentials role list. </summary>
        public IReadOnlyList<CredentialsRoleResponseBaseTypeObject> CredentialsRoleList { get; }
    }
}
