// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace KSeFAPI.Models
{
    public partial class ExceptionType
    {
        internal static ExceptionType DeserializeExceptionType(JsonElement element)
        {
            string serviceCtx = default;
            string serviceCode = default;
            string serviceName = default;
            DateTimeOffset timestamp = default;
            Optional<string> referenceNumber = default;
            IReadOnlyList<ExceptionDetailType> exceptionDetailList = default;
            if (element.ValueKind != JsonValueKind.Null)
                foreach (var property in element.EnumerateObject())
                {
                    if (property.NameEquals("serviceCtx"))
                    {
                        serviceCtx = property.Value.GetString();
                        continue;
                    }
                    if (property.NameEquals("serviceCode"))
                    {
                        serviceCode = property.Value.GetString();
                        continue;
                    }
                    if (property.NameEquals("serviceName"))
                    {
                        serviceName = property.Value.GetString();
                        continue;
                    }
                    if (property.NameEquals("timestamp"))
                    {
                        timestamp = property.Value.GetDateTimeOffset("O");
                        continue;
                    }
                    if (property.NameEquals("referenceNumber"))
                    {
                        referenceNumber = property.Value.GetString();
                        continue;
                    }
                    if (property.NameEquals("exceptionDetailList"))
                    {
                        List<ExceptionDetailType> array = new List<ExceptionDetailType>();
                        foreach (var item in property.Value.EnumerateArray())
                        {
                            array.Add(ExceptionDetailType.DeserializeExceptionDetailType(item));
                        }
                        exceptionDetailList = array;
                        continue;
                    }
                }
            return new ExceptionType(serviceCtx, serviceCode, serviceName, timestamp, referenceNumber.Value, exceptionDetailList);
        }
    }
}
