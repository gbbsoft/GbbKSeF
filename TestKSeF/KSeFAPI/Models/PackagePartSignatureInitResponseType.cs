// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace KSeFAPI.Models
{
    /// <summary> The PackagePartSignatureInitResponseType. </summary>
    public partial class PackagePartSignatureInitResponseType
    {
        /// <summary> Initializes a new instance of PackagePartSignatureInitResponseType. </summary>
        /// <param name="ordinalNumber"></param>
        /// <param name="partFileName"></param>
        /// <param name="url"></param>
        /// <param name="method"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="partFileName"/> or <paramref name="url"/> is null. </exception>
        internal PackagePartSignatureInitResponseType(int ordinalNumber, string partFileName, string url, PackagePartSignatureInitResponseTypeMethod method)
        {
            if (partFileName == null)
            {
                throw new ArgumentNullException(nameof(partFileName));
            }
            if (url == null)
            {
                throw new ArgumentNullException(nameof(url));
            }

            OrdinalNumber = ordinalNumber;
            PartFileName = partFileName;
            Url = url;
            Method = method;
            HeaderEntryList = new ChangeTrackingList<HeaderEntryType>();
        }

        /// <summary> Initializes a new instance of PackagePartSignatureInitResponseType. </summary>
        /// <param name="ordinalNumber"></param>
        /// <param name="partFileName"></param>
        /// <param name="url"></param>
        /// <param name="method"></param>
        /// <param name="headerEntryList"></param>
        internal PackagePartSignatureInitResponseType(int ordinalNumber, string partFileName, string url, PackagePartSignatureInitResponseTypeMethod method, IReadOnlyList<HeaderEntryType> headerEntryList)
        {
            OrdinalNumber = ordinalNumber;
            PartFileName = partFileName;
            Url = url;
            Method = method;
            HeaderEntryList = headerEntryList;
        }

        /// <summary> Gets the ordinal number. </summary>
        public int OrdinalNumber { get; }
        /// <summary> Gets the part file name. </summary>
        public string PartFileName { get; }
        /// <summary> Gets the url. </summary>
        public string Url { get; }
        /// <summary> Gets the method. </summary>
        public PackagePartSignatureInitResponseTypeMethod Method { get; }
        /// <summary> Gets the header entry list. </summary>
        public IReadOnlyList<HeaderEntryType> HeaderEntryList { get; }
    }
}
