// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace KSeFAPI.Models
{
    public partial class CredentialsRoleResponseStandardDetailsType
    {
        internal static CredentialsRoleResponseStandardDetailsType DeserializeCredentialsRoleResponseStandardDetailsType(JsonElement element)
        {
            Optional<CredentialsRoleResponseStandardDetailsTypeCredentialsAssignmentType> credentialsAssignmentType = default;
            Optional<CredentialsIdentifierResponseType> roleAssigningAuthorIdentifier = default;
            Optional<object> roleType = default;
            Optional<string> roleDescription = default;
            string type = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("credentialsAssignmentType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    credentialsAssignmentType = new CredentialsRoleResponseStandardDetailsTypeCredentialsAssignmentType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("roleAssigningAuthorIdentifier"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    roleAssigningAuthorIdentifier = CredentialsIdentifierResponseType.DeserializeCredentialsIdentifierResponseType(property.Value);
                    continue;
                }
                if (property.NameEquals("roleType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    roleType = property.Value.GetObject();
                    continue;
                }
                if (property.NameEquals("roleDescription"))
                {
                    roleDescription = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = property.Value.GetString();
                    continue;
                }
            }
            return new CredentialsRoleResponseStandardDetailsType(roleType.Value, roleDescription.Value, type, Optional.ToNullable(credentialsAssignmentType), roleAssigningAuthorIdentifier.Value);
        }
    }
}
